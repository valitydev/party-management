services:

  testrunner:
    image: $DEV_IMAGE_TAG
    build:
      dockerfile: Dockerfile.dev
      context: .
      args:
        OTP_VERSION: $OTP_VERSION
        THRIFT_VERSION: $THRIFT_VERSION
    volumes:
      - .:$PWD
    hostname: $SERVICE_NAME
    working_dir: $PWD
    depends_on:
      machinegun:
        condition: service_healthy
      dominant:
        condition: service_healthy
      shumway:
        condition: service_started
      postgres:
        condition: service_healthy
    ports:
      - "8022:8022"
    command: /sbin/init

  dominant:
    image: ghcr.io/valitydev/dominant:sha-c0ebc36
    depends_on:
      - machinegun
    ports:
      - "8022"
    command: /opt/dominant/bin/dominant foreground
    volumes:
      - ./test/dominant/sys.config:/opt/dominant/releases/0.1/sys.config
    healthcheck:
      test: "/opt/dominant/bin/dominant ping"
      interval: 5s
      timeout: 1s
      retries: 20

  machinegun:
    image: ghcr.io/valitydev/mg2:sha-8bbcd29
    command: /opt/machinegun/bin/machinegun foreground
    volumes:
      - ./test/machinegun/config.yaml:/opt/machinegun/etc/config.yaml
      - ./test/machinegun/cookie:/opt/machinegun/etc/cookie
    healthcheck:
      test: "/opt/machinegun/bin/machinegun ping"
      interval: 10s
      timeout: 5s
      retries: 10

  shumway:
    image: ghcr.io/valitydev/shumway:sha-658587c
    restart: unless-stopped
    depends_on:
      - shumway-db
    ports:
      - "8022"
    entrypoint:
      - java
      - -Xmx512m
      - -jar
      - /opt/shumway/shumway.jar
      - --spring.datasource.url=jdbc:postgresql://shumway-db:5432/shumway
      - --spring.datasource.username=postgres
      - --spring.datasource.password=postgres
      - --management.endpoint.metrics.enabled=false
      - --management.endpoint.prometheus.enabled=false
    healthcheck:
      disable: true

  shumway-db:
    image: docker.io/library/postgres:13.10
    ports:
      - "5432"
    environment:
      - POSTGRES_DB=shumway
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  postgres:
    image: postgres:15-bookworm
    command: -c 'max_connections=200'
    environment:
      POSTGRES_DB: "progressor_db"
      POSTGRES_USER: "progressor"
      POSTGRES_PASSWORD: "progressor"
      PGDATA: "/tmp/postgresql/data/pgdata"
    volumes:
      - progressor-data:/tmp/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U progressor -d progressor_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

volumes:
  progressor-data: