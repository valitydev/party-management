name: Erlang CI Checks

on:
  push:
    branches:
      - 'master'
      - 'epic/**'
  pull_request:
    branches: [ '**' ]

jobs:
  setup:
    name: Load .env
    runs-on: ubuntu-latest
    outputs:
      otp-version: ${{ steps.otp-version.outputs.version }}
      rebar-version: ${{ steps.rebar-version.outputs.version }}
      thrift-version: ${{ steps.thrift-version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - run: grep -v '^#' .env >> $GITHUB_ENV
      - id: otp-version
        run: echo "::set-output name=version::$OTP_VERSION"
      - id: rebar-version
        run: echo "::set-output name=version::$REBAR_VERSION"
      - id: thrift-version
        run: echo "::set-output name=version::$THRIFT_VERSION"

  run:
    name: Run checks
    needs: setup
    uses: valitydev/erlang-workflows/.github/workflows/erlang-parallel-build.yml@v1.0.1
    with:
      otp-version: ${{ needs.setup.outputs.otp-version }}
      rebar-version: ${{ needs.setup.outputs.rebar-version }}
      use-thrift: true
      thrift-version: ${{ needs.setup.outputs.thrift-version }}
      run-ct-with-compose: true

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup BEAM
        uses: erlef/setup-beam@v1.10
        with:
          otp-version: ${{ needs.setup.outputs.otp-version }}
          rebar3-version: ${{ needs.setup.outputs.rebar-version }}

      - name: Setup Thrift compiler
        if: ${{ true }}
        uses: valitydev/action-setup-thrift@v0.0.5
        with:
          thrift-version: ${{ needs.setup.outputs.thrift-version }}

      - name: Setup Swagger Codegen
        if: ${{ false }}
        uses: valitydev/action-setup-swagger-codegen@v0.0.1
        with:
          codegen-version: ${{ inputs.swagger-codegen-version }}
          generator-version: ${{ inputs.erlang-generator-version }}

      - name: Cache _build
        uses: actions/cache@v2
        with:
          path: _build/*/lib
          key: ${{ inputs.cache-version }}-${{ runner.os }}-otp-${{ needs.setup.outputs.otp-version }}-build-${{ hashFiles('rebar.lock') }}
          restore-keys: |
            ${{ inputs.cache-version }}-${{ runner.os }}-otp-${{ needs.setup.outputs.otp-version }}-build-
      - name: Run EUnit
        run: rebar3 eunit --cover

      - name: Run CommonTest
        id: run-ct
        if: ${{ true == false }}
        run: rebar3 ct --cover

      - name: Run CommonTest (/w docker-compose)
        id: run-ct-w-compose
        if: ${{ true == true }}
        env:
          # Pass workflow params to use in docker-compose.yml
          DEV_IMAGE_TAG: ${{ "testrunner" }}-dev
          OTP_VERSION: ${{ needs.setup.outputs.otp-version }}
          THRIFT_VERSION: ${{ needs.setup.outputs.thrift-version }}
          # Enable buildkit extensions in docker compose
          COMPOSE_DOCKER_CLI_BUILD: true
          DOCKER_BUILDKIT: true
        run: |
          docker-compose run --use-aliases --rm ${{ "testrunner" }} docker container inspect testrunner
      - name: Store CT Logs
        if: ${{ failure() && (steps.run-ct.outcome == 'failure' || steps.run-ct-w-compose.outcome == 'failure') }}
        uses: actions/upload-artifact@v2
        with:
          name: ct-logs
          path: _build/test/logs

      - name: Run test coverage analysis
        run: rebar3 covertool generate

      - name: Upload coverage statistics
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          files: _build/test/covertool/*.covertool.xml
