[
    {kernel, [
        {logger_sasl_compatible, false},
        {logger_level, info},
        {logger, [
            {handler, default, logger_std_h, #{
                level => error,
                config => #{
                    type => standard_error
                },
                formatter => {logger_formatter, #{
                    depth => 30
                }}
            }},
            {handler, console_logger, logger_std_h, #{
                level => debug,
                config => #{
                    type => {file, "/var/log/party-management/console.json"},
                    sync_mode_qlen => 20
                },
                formatter => {logger_logstash_formatter, #{}}
            }}
        ]}
    ]},

    {scoper, [
        {storage, scoper_storage_logger}
    ]},

    {party_management, [
        {scoper_event_handler_options, #{
            event_handler_opts => #{
                formatter_opts => #{
                    max_length => 1000
                }
            }
        }},
        %% Available options for 'machinery_backend'
        %%     machinegun | progressor | hybrid
        %%
        %% For 'progressor' and 'hybrid' backends ensure config
        %% '{progressor, [ ... ]}' is set.
        {machinery_backend, hybrid},
        {services, #{
            automaton        => "http://machinegun:8022/v1/automaton",
            accounter        => "http://shumway:8022/accounter"
        }}
    ]},

    {epg_connector, [
        {databases, #{
            default_db => #{
                host => "postgres",
                port => 5432,
                database => "progressor_db",
                username => "progressor",
                password => "progressor"
            }
        }},
        {pools, #{
            default_pool => #{
                database => default_db,
                size => 30
            }
        }}
    ]},

    {progressor, [
        {call_wait_timeout, 20},
        {defaults, #{
            storage => #{
                client => prg_pg_backend,
                options => #{
                    pool => default_pool
                }
            },
            retry_policy => #{
                initial_timeout => 5,
                backoff_coefficient => 1.0,
                %% seconds
                max_timeout => 180,
                max_attempts => 3,
                non_retryable_errors => []
            },
            task_scan_timeout => 1,
            worker_pool_size => 100,
            process_step_timeout => 30
        }},
        {namespaces, #{
            'party' => #{
                processor => #{
                    client => machinery_prg_backend,
                    options => #{
                        namespace => 'party',
                        handler => {pm_party_machine, #{}},
                        schema => party_management_machinery_schema
                    }
                }
            }
        }}
    ]},

    {dmt_client, [
        % для интеграционных берем latest_version из доминанты
        {use_cached_last_version, false},
        {cache_update_interval, 5000}, % milliseconds
        {max_cache_size, #{
            elements => 20,
            memory => 52428800 % 50Mb
        }},
        {woody_event_handlers, [
            {scoper_woody_event_handler, #{
                event_handler_opts => #{
                    formatter_opts => #{
                        max_length => 1000
                    }
                }
            }}
        ]},
        {service_urls, #{
            'AuthorManagement' => <<"http://dmt:8022/v1/domain/author">>,
            'Repository' => <<"http://dmt:8022/v1/domain/repository">>,
            'RepositoryClient' => <<"http://dmt:8022/v1/domain/repository_client">>
        }}
    ]},

    {snowflake, [
        {max_backward_clock_moving, 1000},  % 1 second
        {machine_id, hostname_hash}
    ]},

    {prometheus, [
        {collectors, [default]}
    ]},

    {hackney, [
        {mod_metrics, woody_hackney_prometheus}
    ]}
].
